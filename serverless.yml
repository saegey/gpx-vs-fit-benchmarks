service: gpx-vs-fit-benchmarks
frameworkVersion: "3"

package:
  individually: true

provider:
  name: aws
  region: us-west-2
  runtime: nodejs20.x
  memorySize: 1024
  timeout: 120
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"
  environment:
    COMMIT_SHA: ${env:COMMIT_SHA, 'dev'}

# Reusable snippets
custom:
  nodeBase: &nodeBase
    runtime: nodejs20.x
    package:
      patterns:
        - "!**/.DS_Store"
        - "!**/*.test.*"

  pyBase: &pyBase
    runtime: python3.11
    package:
      patterns:
        - "!**/.DS_Store"
        - "!**/*.test.*"

functions:
  # Node — FIT
  nodeFit:
    <<: *nodeBase
    handler: node-bench/fit.handler   # minimal file that only imports FIT path
    package:
      patterns:
        - node-bench/fit.js
        - node-bench/fit-utils/**
        - node-bench/node_modules/fit-file-parser/**

  # Node — GPX
  nodeGpx:
    <<: *nodeBase
    handler: node-bench/gpx.handler
    package:
      patterns:
        - node-bench/gpx.js
        - node-bench/gpx-utils/**
        - node-bench/node_modules/fast-xml-parser/**

  # Python — FIT
  pyFit:
    <<: *pyBase
    handler: python_bench/fit_handler.lambda_handler
    package:
      patterns:
        - python_bench/fit_handler.py
        - python_bench/fit_bench.py
        - python_bench/bench_common.py
        - python_bench/testdata/**
        - python_bench/__init__.py
        - python_bench/vendor/**  # only the FIT deps
        - '!**/__pycache__/**'

  # Python — GPX
  pyGpx:
    <<: *pyBase
    handler: python_bench/gpx_handler.lambda_handler
    package:
      patterns:
        - python_bench/gpx_handler.py
        - python_bench/gpx_bench.py
        - python_bench/bench_common.py
        - python_bench/testdata/**
        - python_bench/__init__.py
        - python_bench/vendor/**  # only the FIT deps
        - '!**/__pycache__/**'

  # Go — FIT
  goFit:
    runtime: provided.al2023
    handler: bootstrap
    package:
      artifact: dist/go-fit/go-fit.zip       # build just the FIT binary

  # Go — GPX
  goGpx:
    runtime: provided.al2023
    handler: bootstrap
    package:
      artifact: dist/go-gpx/go-gpx.zip

  # Ruby — FIT
  rubyFit:
    runtime: ruby3.2
    handler: ruby_bench/fit.handle
    package:
      patterns:
        - ruby_bench/bench.rb
        - ruby_bench/fit.rb
        - ruby_bench/Gemfile
        - ruby_bench/Gemfile.lock
        - ruby_bench/vendor/bundle/**  # only FIT gems

  # Ruby — GPX
  # rubyGpx:
  #   runtime: ruby3.2
  #   handler: ruby_bench/gpx.handle
  #   package:
  #     patterns:
  #       - ruby_bench/gpx.rb
  #       - ruby_bench/Gemfile
  #       - ruby_bench/Gemfile.lock
  #       - ruby_bench/vendor/bundle/**  # only GPX gems